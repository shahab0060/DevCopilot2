// <auto-generated />
using System;
using DevCopilot2.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevCopilot2.DataLayer.Migrations
{
    [DbContext(typeof(DevCopilot2DbContext))]
    partial class DevCopilot2DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AddToMenu")
                        .HasColumnType("bit");

                    b.Property<long?>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdType")
                        .HasColumnType("int");

                    b.Property<int?>("InheritedEntityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExcluded")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PluralName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SingularName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("InheritedEntityId");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("ProjectId");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.EntityRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<string>("FillingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FillingType")
                        .HasColumnType("int");

                    b.Property<int>("InputType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MiddleEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PrimaryPropertyId")
                        .HasColumnType("int");

                    b.Property<int>("RelationType")
                        .HasColumnType("int");

                    b.Property<int>("SecondaryEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("MiddleEntityId");

                    b.HasIndex("PrimaryPropertyId");

                    b.HasIndex("SecondaryEntityId");

                    b.ToTable("EntityRelations");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.EntitySelectedLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PluralTitle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SingularTitle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("EntityId");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LatestEditDate");

                    b.ToTable("EntitySelectedLanguages");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.EntitySelectedProjectArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<bool>("HasApi")
                        .HasColumnType("bit");

                    b.Property<bool>("HasCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("HasIndex")
                        .HasColumnType("bit");

                    b.Property<bool>("HasUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWeb")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectAreaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("EntityId");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("ProjectAreaId");

                    b.ToTable("EntitySelectedProjectAreas");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.EntitySelectedProjectAreaSelectedFilter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<int>("EntitySelectedProjectAreaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("EntitySelectedProjectAreaId");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("PropertyId");

                    b.ToTable("EntitySelectedProjectAreaSelectedFilters");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.GeneralSettings.GeneralSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultReactJsSolutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultReactSolutionLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultSolutionLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultSolutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.ToTable("GeneralSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultSolutionLocation = "C:\\Users\\surface\\Projects\\BaseCleanArchitectureTemplate\\BaseCleanArchitectureTemplate.zip",
                            DefaultSolutionName = "BaseCleanArchitectureTemplate",
                            EditCounts = 0,
                            IsDelete = false,
                            LatestEditDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Languages.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DefaultPluralSuffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Permissions.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KeyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Architecture")
                        .HasColumnType("int");

                    b.Property<long>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReactProjectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TemplateId");

                    b.ToTable("ProjectAreas");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectEnum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectEnums");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectEnumProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ProjectEnumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("ProjectEnumId");

                    b.ToTable("ProjectEnumProperties");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectEnumPropertySelectedLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectEnumPropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("ProjectEnumPropertyId");

                    b.ToTable("ProjectEnumPropertySelectedLanguages");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectSelectedLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectSelectedLanguages");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Properties.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataAnnotationDataType")
                        .HasColumnType("int");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<bool>("ExcludeFromListDto")
                        .HasColumnType("bit");

                    b.Property<string>("ForceMapperCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFilterContain")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFilterEqual")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnique")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUpdatable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaxLength")
                        .HasColumnType("int");

                    b.Property<int?>("MinLength")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectEnumId")
                        .HasColumnType("int");

                    b.Property<int?>("RangeFrom")
                        .HasColumnType("int");

                    b.Property<int?>("RangeTo")
                        .HasColumnType("int");

                    b.Property<bool>("ShowInList")
                        .HasColumnType("bit");

                    b.Property<bool>("UseEditor")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("EntityId");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("ProjectEnumId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Properties.PropertyImageResizeInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyImageResizeInformation");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Properties.PropertySelectedLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertySelectedLanguages");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Roles.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Roles.RoleSelectedPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleSelectedPermissions");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Roles.UserSelectedRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSelectedRoles");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.SiteSettings.SiteSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<string>("FavIconName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMSApiKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMSTemplateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.ToTable("SiteSettings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EditCounts = 0,
                            FavIconName = "favicon.ico",
                            IsDelete = false,
                            LatestEditDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LogoImageName = "logo.png",
                            SMSApiKey = "apiKey",
                            SMSTemplateName = "defaultVerification",
                            SiteName = "نام سایت شما"
                        });
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Templates.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnchorTagCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<string>("BreadCrumbCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckBoxInputCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorPickerInputCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatePageHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<string>("FileInputCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntegerInputHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ListBoolTdHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListDefaultTdCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListFirstThCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListImageTdHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListOtherThCodes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListPriceTdHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListTextTdHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListViewCardHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListViewHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("SelectInputHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SingleImageHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmitBtnCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextEditorInputHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextInputHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("ProjectId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EditCounts")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LatestEditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhoneNumberActivationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PhoneNumberActivationCodeExpireTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("FirstName");

                    b.HasIndex("IsDelete");

                    b.HasIndex("LastName");

                    b.HasIndex("LatestEditDate");

                    b.HasIndex("PhoneNumber", "Password");

                    b.HasIndex("PhoneNumber", "PhoneNumberActivationCode", "PhoneNumberActivationCodeExpireTime");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EditCounts = 0,
                            FirstName = "نام",
                            IsDelete = false,
                            IsSuperAdmin = true,
                            LastName = "نام خانوادگی",
                            LatestEditDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "12345678",
                            PhoneNumber = "09121234567",
                            PhoneNumberActivationCode = "",
                            PhoneNumberActivationCodeExpireTime = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.Entity", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Users.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("DevCopilot2.Domain.Entities.Entities.Entity", "InheritedEntity")
                        .WithMany("Entities")
                        .HasForeignKey("InheritedEntityId");

                    b.HasOne("DevCopilot2.Domain.Entities.Projects.Project", "Project")
                        .WithMany("Entities")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("InheritedEntity");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.EntityRelation", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Entities.Entity", "MiddleEntity")
                        .WithMany("MiddleEntityList")
                        .HasForeignKey("MiddleEntityId");

                    b.HasOne("DevCopilot2.Domain.Entities.Properties.Property", "PrimaryProperty")
                        .WithMany("EntityRelations")
                        .HasForeignKey("PrimaryPropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Entities.Entity", "SecondaryEntity")
                        .WithMany("SecondaryEntityList")
                        .HasForeignKey("SecondaryEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MiddleEntity");

                    b.Navigation("PrimaryProperty");

                    b.Navigation("SecondaryEntity");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.EntitySelectedLanguage", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Entities.Entity", "Entity")
                        .WithMany("EntitySelectedLanguages")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Languages.Language", "Language")
                        .WithMany("EntitySelectedLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.EntitySelectedProjectArea", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Entities.Entity", "Entity")
                        .WithMany("EntitySelectedProjectAreas")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Projects.ProjectArea", "ProjectArea")
                        .WithMany("EntitySelectedProjectAreas")
                        .HasForeignKey("ProjectAreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("ProjectArea");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.EntitySelectedProjectAreaSelectedFilter", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Entities.EntitySelectedProjectArea", "EntitySelectedProjectArea")
                        .WithMany("EntitySelectedProjectAreaSelectedFilters")
                        .HasForeignKey("EntitySelectedProjectAreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Properties.Property", "Property")
                        .WithMany("EntitySelectedProjectAreaSelectedFilters")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntitySelectedProjectArea");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.Project", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Users.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectArea", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Projects.Project", "Project")
                        .WithMany("ProjectAreas")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Templates.Template", "Template")
                        .WithMany("ProjectAreas")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectEnum", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Users.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Projects.Project", "Project")
                        .WithMany("ProjectEnums")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Author");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectEnumProperty", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Projects.ProjectEnum", "ProjectEnum")
                        .WithMany("ProjectEnumProperties")
                        .HasForeignKey("ProjectEnumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProjectEnum");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectEnumPropertySelectedLanguage", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Languages.Language", "Language")
                        .WithMany("ProjectEnumPropertySelectedLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Projects.ProjectEnumProperty", "ProjectEnumProperty")
                        .WithMany("ProjectEnumPropertySelectedLanguages")
                        .HasForeignKey("ProjectEnumPropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("ProjectEnumProperty");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectSelectedLanguage", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Languages.Language", "Language")
                        .WithMany("ProjectSelectedLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Projects.Project", "Project")
                        .WithMany("ProjectSelectedLanguages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Properties.Property", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Entities.Entity", "Entity")
                        .WithMany("Properties")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Projects.ProjectEnum", "ProjectEnum")
                        .WithMany("Properties")
                        .HasForeignKey("ProjectEnumId");

                    b.Navigation("Entity");

                    b.Navigation("ProjectEnum");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Properties.PropertyImageResizeInformation", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Properties.Property", "Property")
                        .WithMany("PropertyImageResizeInformation")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Properties.PropertySelectedLanguage", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Languages.Language", "Language")
                        .WithMany("PropertySelectedLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Properties.Property", "Property")
                        .WithMany("PropertySelectedLanguages")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Roles.RoleSelectedPermission", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Permissions.Permission", "Permission")
                        .WithMany("RoleSelectedPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Roles.Role", "Role")
                        .WithMany("RoleSelectedPermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Roles.UserSelectedRole", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Roles.Role", "Role")
                        .WithMany("UserSelectedRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Users.User", "User")
                        .WithMany("UserSelectedRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Templates.Template", b =>
                {
                    b.HasOne("DevCopilot2.Domain.Entities.Users.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCopilot2.Domain.Entities.Projects.Project", "Project")
                        .WithMany("Templates")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Author");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.Entity", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("EntitySelectedLanguages");

                    b.Navigation("EntitySelectedProjectAreas");

                    b.Navigation("MiddleEntityList");

                    b.Navigation("Properties");

                    b.Navigation("SecondaryEntityList");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Entities.EntitySelectedProjectArea", b =>
                {
                    b.Navigation("EntitySelectedProjectAreaSelectedFilters");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Languages.Language", b =>
                {
                    b.Navigation("EntitySelectedLanguages");

                    b.Navigation("ProjectEnumPropertySelectedLanguages");

                    b.Navigation("ProjectSelectedLanguages");

                    b.Navigation("PropertySelectedLanguages");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Permissions.Permission", b =>
                {
                    b.Navigation("RoleSelectedPermissions");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.Project", b =>
                {
                    b.Navigation("Entities");

                    b.Navigation("ProjectAreas");

                    b.Navigation("ProjectEnums");

                    b.Navigation("ProjectSelectedLanguages");

                    b.Navigation("Templates");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectArea", b =>
                {
                    b.Navigation("EntitySelectedProjectAreas");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectEnum", b =>
                {
                    b.Navigation("ProjectEnumProperties");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Projects.ProjectEnumProperty", b =>
                {
                    b.Navigation("ProjectEnumPropertySelectedLanguages");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Properties.Property", b =>
                {
                    b.Navigation("EntityRelations");

                    b.Navigation("EntitySelectedProjectAreaSelectedFilters");

                    b.Navigation("PropertyImageResizeInformation");

                    b.Navigation("PropertySelectedLanguages");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Roles.Role", b =>
                {
                    b.Navigation("RoleSelectedPermissions");

                    b.Navigation("UserSelectedRoles");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Templates.Template", b =>
                {
                    b.Navigation("ProjectAreas");
                });

            modelBuilder.Entity("DevCopilot2.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("UserSelectedRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
